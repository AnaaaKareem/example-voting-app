name: Build Worker
# template source: https://github.com/dockersamples/.github/blob/main/templates/call-docker-build.yaml

on:
  # we want pull requests so we can build(test) but not push to image registry
  push:
    branches:
      - 'main'
    # only build when important files change
    paths:
      - 'worker/**'
      - '.github/workflows/call-docker-build-worker.yaml'
  pull_request:
    branches:
      - 'main'
    # only build when important files change
    paths:
      - 'worker/**'
      - '.github/workflows/call-docker-build-worker.yaml'

jobs:

  Test:

    runs-on: ubuntu-latest
    
    defaults:
     run:
       working-directory: worker

    strategy:
      matrix:
        dotnet: [ '7.0.0', '8.0.0', '9.0.0' ]


    steps:
      - uses: actions/checkout@v5

      - name: 
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnet }}
      
      
      - name: Restore dependencies for v.${{ matrix.dotnet }}
        run: dotnet restore

      - name: Build for v.${{ matrix.dotnet }}
        run: dotnet build --configuration Release --no-restore

      - name: Test for v.${{ matrix.dotnet }}
        run: dotnet test --no-build --verbosity normal

  
  BuildAndPublish:

    runs-on: ubuntu-latest
    
    defaults:
     run:
       working-directory: worker
  
    steps:
      - uses: actions/checkout@v5

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.region }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push docker image to Amazon ECR
        id: build-image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: votingapp/worker
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG