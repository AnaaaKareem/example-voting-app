name: Build Result
# template source: https://github.com/dockersamples/.github/blob/main/templates/call-docker-build.yaml

on:
  # we want pull requests so we can build(test) but not push to image registry
  push:
    branches:
      - 'main'
    # only build when important files change
    paths:
      - 'result/**'
      - '.github/workflows/call-docker-build-result.yaml'
  pull_request:
    branches:
      - 'main'
    # only build when important files change
    paths:
      - 'result/**'
      - '.github/workflows/call-docker-build-result.yaml'

# Jobs
jobs:
  
  # Test and Build node.js image
  Test-Node:

    runs-on: ubuntu-latest
    defaults:
     run:
       working-directory: result
    
    # Setup multiple node versions to test
    strategy:
      matrix:
        node: [14, 16, 18, 20]

    steps:
      - uses: actions/checkout@v5

      - name: node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
      
      # Install npm dependencies before build
      - run: npm ci
      
  registry_login:
    # runs-on: ubuntu-latest
    # steps:
    #   - name: Login to ECR
    #     uses: docker/login-action@v3
    #     with:
    #       registry: ${{ vars.aws-account-number }}.dkr.ecr.${{ vars.region }}.amazonaws.com
    #       username: ${{ vars.AWS_ACCESS_KEY_ID }}
    #       password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    runs-on: ubuntu-latest
    run:
      defaults:
        working-directory: result

    steps:
      - uses: actions/checkout@v5

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.region }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push docker image to Amazon ECR
        id: build-image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: results
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
